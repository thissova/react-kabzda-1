{"version":3,"file":"static/js/222.fe842c5a.chunk.js","mappings":"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","sources":["webpack://react-kabzda-1/./src/components/Profile/MyPosts/MyPosts.module.scss?39b9","webpack://react-kabzda-1/./src/components/Profile/MyPosts/Post/Post.module.scss?ca59","components/Profile/MyPosts/Post/Post.jsx","components/Profile/MyPosts/AddPostForm/AddPostForm.jsx","components/Profile/MyPosts/MyPosts.jsx","components/Profile/MyPosts/MyPostsContainer.jsx","components/Profile/ProfileInfo/Description/Description.jsx","webpack://react-kabzda-1/./src/components/Profile/ProfileInfo/ProfileInfo.module.scss?e49f","components/Profile/ProfileInfo/Status.jsx","components/Profile/ProfileInfo/ProfileInfo.jsx","components/Profile/Profile.jsx","components/Profile/ProfileContainer.jsx","components/common/FormsControls/FormsControls.jsx","utils/validators/validators.js","webpack://react-kabzda-1/./src/components/common/FormsControls/FormsControls.module.scss?b614"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"content\":\"MyPosts_content__jNzet\"};","// extracted by mini-css-extract-plugin\nexport default {\"item\":\"Post_item__mtBD+\"};","import React from \"react\";\r\nimport styles from './Post.module.scss'\r\n\r\nconst Post = (props) => {\r\n    let textLike = 'like'\r\n\r\n    if (props.likesCount !== 1){\r\n        textLike = 'likes'\r\n    }\r\n    \r\n    return (\r\n        <div className={styles.item}>\r\n            <img src=\"https://i.guim.co.uk/img/media/26392d05302e02f7bf4eb143bb84c8097d09144b/446_167_3683_2210/master/3683.jpg?width=1200&height=1200&quality=85&auto=format&fit=crop&s=49ed3252c0b2ffb49cf8b508892e452d\" alt=\"my avatar\" />\r\n            {props.message}\r\n            <div>\r\n                <span>{props.likesCount} {textLike}</span>\r\n                \r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Post","import React from \"react\";\r\nimport {Field, reduxForm} from \"redux-form\";\r\nimport {maxLengthCreator, required} from \"../../../../utils/validators/validators\";\r\nimport {TextArea} from \"../../../common/FormsControls/FormsControls\";\r\n\r\nconst AddPostForm = (props) => {\r\n    return <form onSubmit={props.handleSubmit}>\r\n        <div>\r\n            <Field component={TextArea} validate={[required, maxLengthCreator(38)]} name={\"addNewPost\"} placeholder={\"Add new post\"}/>\r\n        </div>\r\n        <div>\r\n            <button >Add post</button>\r\n        </div>\r\n    </form>\r\n}\r\nexport default reduxForm({form: \"AddPostForm\"})(AddPostForm)","import React from \"react\";\r\nimport styles from './MyPosts.module.scss'\r\nimport Post from \"./Post/Post\";\r\nimport AddPostForm from \"./AddPostForm/AddPostForm\";\r\n\r\nconst MyPosts = React.memo((props) => {\r\n    let postsElements = props.posts.map(post =>\r\n        <Post message={post.message} likesCount={post.likesCount}/>\r\n    )\r\n    let addPost = (values) => {\r\n        props.addPost(values.addNewPost)\r\n    }\r\n    return (\r\n        <div className={styles.content}>\r\n            <h2>My posts</h2>\r\n            <AddPostForm onSubmit={addPost}/>\r\n            <div className={styles.posts}>\r\n                {postsElements}\r\n            </div>\r\n        </div>\r\n    )\r\n});\r\n\r\nexport default MyPosts","import { connect } from \"react-redux\";\r\nimport { addPostActionCreator} from \"../../../data/profile-reducer\";\r\nimport MyPosts from \"./MyPosts\";\r\n\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        posts: state.profilePage.posts\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        addPost: (message) => {\r\n            dispatch(addPostActionCreator(message))\r\n        }\r\n    }\r\n}\r\nconst MyPostsContainer = connect(mapStateToProps, mapDispatchToProps)(MyPosts)\r\nexport default MyPostsContainer","import React from \"react\";\r\nimport \"./Description.module.scss\"\r\n\r\nlet Description = (props) => {\r\n    return (\r\n        <div>\r\n            {props.profile.fullName}\r\n            <br />\r\n\r\n            About me: {props.profile.aboutMe}\r\n            <br />\r\n\r\n            {props.profile.lookingForAJob ? 'Looking for a job' : 'Don\\'t looking for a job'}\r\n            <br />\r\n\r\n            Description about job: {props.profile.lookingForAJobDescription}\r\n            <br />\r\n\r\n            <button onClick={() => {\r\n                if (props.profile.contacts.facebook === null || props.profile.contacts.facebook === \"\") {\r\n                    alert('I haven\\'t got Facebook')\r\n                } else {\r\n                    window.open(`https://${props.profile.contacts.facebook}`, \"_blank\")\r\n                }\r\n            }}>Facebook</button>\r\n            <br />\r\n            <button onClick={() => {\r\n                if (props.profile.contacts.website === null || props.profile.contacts.website === \"\") {\r\n                    alert('I haven\\'t got website')\r\n                } else {\r\n                    window.open(`https://${props.profile.contacts.website}`, \"_blank\")\r\n                }\r\n            }}>Website</button>\r\n            <br />\r\n            <button onClick={() => {\r\n                if (props.profile.contacts.twitter === null || props.profile.contacts.twitter === \"\") {\r\n                    alert('I haven\\'t got Twitter')\r\n                } else {\r\n                    window.open(`https://${props.profile.contacts.twitter}`, \"_blank\")\r\n                }\r\n            }}>Twitter</button>\r\n            <br />\r\n            <button onClick={() => {\r\n                if (props.profile.contacts.instagram === null || props.profile.contacts.instagram === \"\") {\r\n                    alert('I haven\\'t got Instagram')\r\n                } else {\r\n                    window.open(`https://${props.profile.contacts.instagram}`, \"_blank\")\r\n                }\r\n            }}>Instagram</button>\r\n            <br />\r\n            <button onClick={() => {\r\n                if (props.profile.contacts.youtube === null || props.profile.contacts.youtube === \"\") {\r\n                    alert('I haven\\'t got YouTube')\r\n                } else {\r\n                    window.open(`https://${props.profile.contacts.youtube}`, \"_blank\")\r\n                }\r\n            }}>YouTube</button>\r\n            <br />\r\n            <button onClick={() => {\r\n                if (props.profile.contacts.github === null || props.profile.contacts.github === \"\") {\r\n                    alert('I haven\\'t got GitHub')\r\n                } else {\r\n                    window.open(`https://${props.profile.contacts.github}`, \"_blank\")\r\n                }\r\n            }}>GitHub</button>\r\n            <br />\r\n\r\n\r\n        </div>\r\n\r\n    )\r\n}\r\n\r\nexport default Description","// extracted by mini-css-extract-plugin\nexport default {\"information\":\"ProfileInfo_information__MVGE3\"};","import React from 'react';\r\n\r\nclass ProfileStatus extends React.Component {\r\n    state = {\r\n        editMode: false,\r\n        status: this.props.status\r\n    }\r\n\r\n    activateEditMode = () => {\r\n        this.setState({\r\n            editMode: true\r\n        });\r\n    }\r\n\r\n    deactivateEditMode() {\r\n        this.setState({\r\n            editMode: false\r\n        });\r\n        this.props.setStatus(this.state.status)\r\n    }\r\n\r\n    onStatusChange = (e) => {\r\n        this.setState({\r\n            status: e.currentTarget.value\r\n        });\r\n    }\r\n\r\n    componentDidUpdate(prevProps, prevState) {\r\n\r\n        if (prevProps.status !== this.props.status) {\r\n            this.setState({\r\n                status: this.props.status\r\n            });\r\n        }\r\n    }\r\n\r\n    render() {\r\n\r\n        return (\r\n            <div>\r\n                {!this.state.editMode &&\r\n                    <div>\r\n                        <span onClick={this.activateEditMode}>{this.props.status || \"-------\"}</span>\r\n                    </div>\r\n                }\r\n                {this.state.editMode &&\r\n                    <div>\r\n                        <input onChange={this.onStatusChange} autoFocus={true}\r\n                               onBlur={this.deactivateEditMode.bind(this)}\r\n                               value={this.state.status}/>\r\n                    </div>\r\n                }\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default ProfileStatus;","import React from \"react\";\r\nimport Description from \"./Description/Description\";\r\nimport styles from './ProfileInfo.module.scss'\r\nimport userPhoto from '../../../assets/images/user_icon.png'\r\nimport ProfileStatus from \"./Status\";\r\n\r\n\r\nconst ProfileInfo = (props) => {\r\n\r\n    for (let contact in props.profile.contacts) {\r\n        \r\n        if (props.profile.contacts[contact] != null && props.profile.contacts[contact].slice(0, 8) === 'https://') {\r\n                props.profile.contacts[contact] = props.profile.contacts[contact].replace('https://', '')\r\n            \r\n        }\r\n    }\r\n    \r\n    return (\r\n        <div className=\"content\">\r\n            <div className={styles.information}>\r\n                {props.profile.photos.large ? <img src={props.profile.photos.large} alt=''/> : <img src={userPhoto} alt=''/>}\r\n                <section>\r\n                    <Description profile={props.profile} />\r\n                </section>\r\n                    <div><ProfileStatus className={styles.status} status={props.status} setStatus={props.setStatus}/></div>\r\n            </div>\r\n        </div >\r\n    )\r\n}\r\n\r\nexport default ProfileInfo","import React from \"react\";\r\nimport MyPostsContainer from \"./MyPosts/MyPostsContainer\";\r\nimport ProfileInfo from \"./ProfileInfo/ProfileInfo\";\r\n\r\nconst Profile = (props) => {\r\n\r\n    return (\r\n        <div>\r\n            <ProfileInfo profile={props.profile} status={props.status} setStatus={props.setStatus}/>\r\n            <MyPostsContainer />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Profile","import React from \"react\";\r\nimport Profile from \"./Profile\";\r\nimport {connect} from \"react-redux\";\r\nimport {\r\n    getStatusThunkCreator,\r\n    getUserProfileThunkCreator,\r\n    setStatusThunkCreator,\r\n    setUserProfile\r\n} from \"../../data/profile-reducer\";\r\nimport {withRouter} from \"react-router-dom\";\r\nimport {compose} from \"redux\";\r\n\r\nclass ProfileContainer extends React.Component {\r\n    componentDidMount() {\r\n        let userId = this.props.match.params.userId\r\n        if (!userId) {\r\n            userId = this.props.userId\r\n            this.props.getUserProfile(userId)\r\n            this.props.getStatus(userId)\r\n            if (!userId) {\r\n                this.props.history.push(\"/login\");\r\n            }\r\n        } else {\r\n            this.props.getUserProfile(userId)\r\n            this.props.getStatus(userId)}\r\n    }\r\n\r\n    render() {\r\n        return <Profile {...this.props} profile={this.props.profile} status={this.props.status}\r\n                        setStatus={this.props.setStatus} />\r\n    }\r\n}\r\n\r\nlet mapStateToProps = (state) => ({\r\n    profile: state.profilePage.profile,\r\n    status: state.profilePage.status,\r\n    userId: state.auth.id,\r\n    isAuth: state.auth.isAuth\r\n})\r\n\r\n\r\nexport default compose(connect(mapStateToProps, {\r\n        setUserProfile,\r\n        getUserProfile: getUserProfileThunkCreator,\r\n        setStatus: setStatusThunkCreator,\r\n        getStatus: getStatusThunkCreator\r\n    }),\r\n    withRouter,\r\n)(ProfileContainer)","import React from \"react\";\r\nimport styles from './FormsControls.module.scss'\r\nimport {Field} from \"redux-form\";\r\n\r\nconst FormControl = ({meta, children}) => {\r\n    const hasError = meta.error && meta.touched\r\n    return <div className={styles.formControl + ' ' + (hasError ? styles.error : '')}>\r\n        <div>\r\n            {children}\r\n        </div>\r\n        {hasError ? <span>{meta.error}</span> : null}\r\n    </div>\r\n}\r\nexport const Input = (props) => {\r\n    const {input, meta, child, ...restProps} = props\r\n    return <FormControl {...props} ><input {...input} {...restProps}/></FormControl>\r\n}\r\n\r\nexport const TextArea = (props) => {\r\n    const {input, meta, child, ...restProps} = props\r\n    return <FormControl {...props}> <textarea {...input} {...restProps}/></FormControl>\r\n\r\n}\r\n\r\nexport const createField = (validators, placeholder, name, component, props, text) => (\r\n    <div>\r\n        <Field validate={validators} placeholder={placeholder} name={name} component={component} {...props}/> {text}\r\n    </div>\r\n)\r\n","export const required = (value) => {\r\n    if(value) return undefined\r\n    return 'Field is required';\r\n}\r\nexport const maxLengthCreator = (maxLength) => (value) => {\r\n\r\n    if(value && value.length > maxLength) return `Max length is ${maxLength} symbols`\r\n    return undefined;\r\n}\r\n\r\n","// extracted by mini-css-extract-plugin\nexport default {\"formControl\":\"FormsControls_formControl__IUy0G\",\"error\":\"FormsControls_error__jIoDy\",\"formSummaryError\":\"FormsControls_formSummaryError__BjeyB\"};"],"names":["props","textLike","likesCount","className","styles","src","alt","message","reduxForm","form","onSubmit","handleSubmit","Field","component","TextArea","validate","required","maxLengthCreator","name","placeholder","React","postsElements","posts","map","post","values","addPost","addNewPost","connect","state","profilePage","dispatch","addPostActionCreator","MyPosts","profile","fullName","aboutMe","lookingForAJob","lookingForAJobDescription","onClick","contacts","facebook","alert","window","open","website","twitter","instagram","youtube","github","ProfileStatus","editMode","status","activateEditMode","setState","onStatusChange","e","currentTarget","value","this","setStatus","prevProps","prevState","onChange","autoFocus","onBlur","deactivateEditMode","bind","contact","slice","replace","photos","large","userPhoto","ProfileContainer","userId","match","params","getUserProfile","getStatus","history","push","compose","auth","id","isAuth","setUserProfile","getUserProfileThunkCreator","setStatusThunkCreator","getStatusThunkCreator","withRouter","FormControl","meta","children","hasError","error","touched","Input","input","restProps","child","createField","validators","text","maxLength","length"],"sourceRoot":""}