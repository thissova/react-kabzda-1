{"version":3,"file":"static/js/188.cb10186a.chunk.js","mappings":"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","sources":["webpack://react-kabzda-1/./src/components/Profile/MyPosts/MyPosts.module.scss?39b9","webpack://react-kabzda-1/./src/components/Profile/MyPosts/Post/Post.module.scss?ca59","components/Profile/MyPosts/Post/Post.jsx","components/Profile/MyPosts/AddPostForm/AddPostForm.jsx","components/Profile/MyPosts/MyPosts.jsx","components/Profile/MyPosts/MyPostsContainer.jsx","webpack://react-kabzda-1/./src/components/Profile/ProfileInfo/ProfileInfo.module.scss?e49f","components/Profile/ProfileInfo/Description/Description.jsx","components/Profile/ProfileInfo/Status.jsx","components/Profile/ProfileInfo/Description/DescriptionForm.jsx","components/Profile/ProfileInfo/ProfileInfo.jsx","components/Profile/Profile.jsx","components/Profile/ProfileContainer.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"content\":\"MyPosts_content__jNzet\"};","// extracted by mini-css-extract-plugin\nexport default {\"item\":\"Post_item__mtBD+\"};","import React from \"react\";\r\nimport styles from './Post.module.scss'\r\n\r\nconst Post = (props) => {\r\n    let textLike = 'like'\r\n\r\n    if (props.likesCount !== 1){\r\n        textLike = 'likes'\r\n    }\r\n    \r\n    return (\r\n        <div className={styles.item}>\r\n            <img src=\"https://i.guim.co.uk/img/media/26392d05302e02f7bf4eb143bb84c8097d09144b/446_167_3683_2210/master/3683.jpg?width=1200&height=1200&quality=85&auto=format&fit=crop&s=49ed3252c0b2ffb49cf8b508892e452d\" alt=\"my avatar\" />\r\n            {props.message}\r\n            <div>\r\n                <span>{props.likesCount} {textLike}</span>\r\n                \r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Post","import React from \"react\";\r\nimport {Field, reduxForm} from \"redux-form\";\r\nimport {maxLengthCreator, required} from \"../../../../utils/validators/validators\";\r\nimport {TextArea} from \"../../../common/FormsControls/FormsControls\";\r\n\r\nconst AddPostForm = (props) => {\r\n    return <form onSubmit={props.handleSubmit}>\r\n        <div>\r\n            <Field component={TextArea} validate={[required, maxLengthCreator(38)]} name={\"addNewPost\"} placeholder={\"Add new post\"}/>\r\n        </div>\r\n        <div>\r\n            <button >Add post</button>\r\n        </div>\r\n    </form>\r\n}\r\nexport default reduxForm({form: \"AddPostForm\"})(AddPostForm)","import React from \"react\";\r\nimport styles from './MyPosts.module.scss'\r\nimport Post from \"./Post/Post\";\r\nimport AddPostForm from \"./AddPostForm/AddPostForm\";\r\n\r\nconst MyPosts = React.memo((props) => {\r\n    let postsElements = props.posts.map(post =>\r\n        <Post key={post.id} message={post.message} likesCount={post.likesCount}/>\r\n    )\r\n    let addPost = (values) => {\r\n        props.addPost(values.addNewPost)\r\n    }\r\n    return (\r\n        <div className={styles.content}>\r\n            <h2>My posts</h2>\r\n            <AddPostForm onSubmit={addPost}/>\r\n            <div className={styles.posts}>\r\n                {postsElements}\r\n            </div>\r\n        </div>\r\n    )\r\n});\r\n\r\nexport default MyPosts","import { connect } from \"react-redux\";\r\nimport { addPostActionCreator} from \"../../../data/profile-reducer\";\r\nimport MyPosts from \"./MyPosts\";\r\n\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        posts: state.profilePage.posts\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        addPost: (message) => {\r\n            dispatch(addPostActionCreator(message))\r\n        }\r\n    }\r\n}\r\nconst MyPostsContainer = connect(mapStateToProps, mapDispatchToProps)(MyPosts)\r\nexport default MyPostsContainer","// extracted by mini-css-extract-plugin\nexport default {\"information\":\"ProfileInfo_information__MVGE3\",\"contact\":\"ProfileInfo_contact__KAj26\"};","import React from \"react\";\r\nimport \"./Description.module.scss\"\r\nimport styles from \"../ProfileInfo.module.scss\";\r\n\r\nconst Description = ({profile, isOwner, goToEditMode}) => {\r\n    return <div>\r\n        {isOwner && <div><button onClick={goToEditMode}>edit</button></div>}\r\n        <div>\r\n            <b>Full name</b>: {profile.fullName}\r\n        </div>\r\n        <div>\r\n            <b>Looking for a job</b>: {profile.lookingForAJob ? \"yes\" : \"no\"}\r\n        </div>\r\n        {profile.lookingForAJob &&\r\n            <div>\r\n                <b>My professional skills</b>: {profile.lookingForAJobDescription}\r\n            </div>\r\n        }\r\n\r\n        <div>\r\n            <b>About me</b>: {profile.aboutMe}\r\n        </div>\r\n        <div>\r\n            <b>Contacts</b>: {Object.keys(profile.contacts).filter(c => c !== \"vk\" && c !== \"mainLink\").map(key => {\r\n            return <Contact key={key} contactTitle={key} contactValue={profile.contacts[key]}/>\r\n        })}\r\n        </div>\r\n    </div>\r\n}\r\nconst Contact = ({contactTitle, contactValue}) => {\r\n    return <div className={styles.contact}><b>{contactTitle}</b>:{contactValue}</div>\r\n}\r\n\r\nexport default Description","import React from 'react';\r\n\r\nclass ProfileStatus extends React.Component {\r\n    state = {\r\n        editMode: false,\r\n        status: this.props.status\r\n    }\r\n\r\n    activateEditMode = () => {\r\n        this.setState({\r\n            editMode: true\r\n        });\r\n    }\r\n\r\n    deactivateEditMode() {\r\n        this.setState({\r\n            editMode: false\r\n        });\r\n        this.props.setStatus(this.state.status)\r\n    }\r\n\r\n    onStatusChange = (e) => {\r\n        this.setState({\r\n            status: e.currentTarget.value\r\n        });\r\n    }\r\n\r\n    componentDidUpdate(prevProps, prevState) {\r\n        if (prevProps.status !== this.props.status) {\r\n            this.setState({\r\n                status: this.props.status\r\n            });\r\n        }\r\n    }\r\n\r\n    render() {\r\n\r\n        return (\r\n            <div>\r\n                {!this.state.editMode &&\r\n                    <div>\r\n                        <span onClick={this.activateEditMode}><b>Status: </b>{this.props.status || \"-------\"}</span>\r\n                    </div>\r\n                }\r\n                {this.state.editMode &&\r\n                    <div>\r\n                        <input onChange={this.onStatusChange} autoFocus={true}\r\n                               onBlur={this.deactivateEditMode.bind(this)}\r\n                               value={this.state.status}/>\r\n                    </div>\r\n                }\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default ProfileStatus;","import React from \"react\";\r\nimport \"./Description.module.scss\"\r\nimport styles from \"../ProfileInfo.module.scss\";\r\nimport {createField, Input, TextArea} from \"../../../common/FormsControls/FormsControls\";\r\nimport {reduxForm} from \"redux-form\";\r\nimport {load as loadAccount} from \"../../../../data/account\";\r\nimport {connect} from \"react-redux\";\r\nimport stylesError from \"./../../../common/FormsControls/FormsControls.module.scss\"\r\n\r\nconst DescriptionForm = ({handleSubmit, profile, error, load}) => {\r\n    load(profile)\r\n    return <form onSubmit={handleSubmit}>\r\n        <div>\r\n            <button >Save</button>\r\n        </div>\r\n        {error ? <div className={stylesError.formSummaryError}>\r\n            {error}\r\n        </div> : null}\r\n        <div>\r\n            <b>Full name</b>: {createField([], \"Full name\", \"fullName\", Input)}\r\n        </div>\r\n        <div>\r\n            <b>Looking for a job</b>: yes/no {createField([], \"\", \"lookingForAJob\", Input, {type: \"checkbox\"})}\r\n        </div>\r\n        <div>\r\n            <b>My professional\r\n                skills</b>: {createField([], \"My professional skills\", \"lookingForAJobDescription\", TextArea)}\r\n        </div>\r\n\r\n\r\n        <div>\r\n            <b>About me</b>: {createField([], \"About me\", \"aboutMe\", TextArea)}\r\n        </div>\r\n        <div>\r\n            <b>Contacts</b>: {Object.keys(profile.contacts).filter(c => c !== \"vk\" && c !== \"mainLink\").map(key => {\r\n            return <div key={key} className={styles.contact}><b>{key}: </b> {createField([], key, \"contacts.\" + key, Input)} </div>\r\n        })}\r\n        </div>\r\n    </form>\r\n}\r\n\r\nlet DescriptionFormReduxForm = reduxForm({\r\n    form: \"DescriptionForm\"\r\n})(DescriptionForm)\r\n\r\nlet DescriptionFormReduxFormConnect = connect(\r\n    state => ({\r\n        initialValues: state.account.data,\r\n        profile: state.profilePage.profile\r\n    }),\r\n    { load: loadAccount }, // bind account loading action creator\r\n)(DescriptionFormReduxForm);\r\n\r\nexport default DescriptionFormReduxFormConnect","import React, {useState} from \"react\";\r\nimport Description from \"./Description/Description\";\r\nimport styles from './ProfileInfo.module.scss'\r\nimport userPhoto from '../../../assets/images/user_icon.png'\r\nimport ProfileStatus from \"./Status\";\r\nimport Preloader from \"../../common/Preloader/Preloader\";\r\nimport DescriptionForm from \"./Description/DescriptionForm\";\r\n\r\n\r\nconst ProfileInfo = ({profile, isOwner, status, setStatus, setPhoto, saveProfile}) => {\r\n\r\n    let [editMode, setEditMode] = useState(false)\r\n\r\n    if (!profile) {\r\n        return <Preloader/>\r\n    }\r\n\r\n    const onMainPhotoSelected = (e) => {\r\n        let file = e.target.files[0]\r\n\r\n        setPhoto(file)\r\n    }\r\n\r\n    const onSubmit = (formData) => {\r\n        saveProfile(formData).then(() => setEditMode(false))\r\n    }\r\n\r\n    return (\r\n        <div className=\"content\">\r\n            <div className={styles.information}>\r\n                {profile.photos.large ? <img src={profile.photos.large} alt=''/> :\r\n                    <img src={userPhoto} alt=''/>}\r\n                {isOwner && <input type={\"file\"} onChange={onMainPhotoSelected}/>}\r\n                <section>\r\n                    {editMode\r\n                        ? <DescriptionForm onSubmit={onSubmit}/> :\r\n                        <Description profile={profile} isOwner={isOwner} goToEditMode={() => {\r\n                            setEditMode(true)\r\n                        }}/>}\r\n                </section>\r\n                <div><ProfileStatus className={styles.status} status={status} setStatus={setStatus}/></div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ProfileInfo","import React from \"react\";\r\nimport MyPostsContainer from \"./MyPosts/MyPostsContainer\";\r\nimport ProfileInfo from \"./ProfileInfo/ProfileInfo\";\r\n\r\nconst Profile = (props) => {\r\n\r\n    return (\r\n        <div>\r\n            <ProfileInfo profile={props.profile} status={props.status} setStatus={props.setStatus}\r\n                         isOwner={props.isOwner} setPhoto={props.setPhoto} saveProfile={props.saveProfile}/>\r\n            <MyPostsContainer />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Profile","import React from 'react';\r\nimport Profile from \"./Profile\";\r\nimport {connect} from \"react-redux\";\r\nimport {\r\n    getStatusThunkCreator,\r\n    getUserProfileThunkCreator, saveProfileThunkCreator, setPhotoThunkCreator,\r\n    setStatusThunkCreator,\r\n    setUserProfile\r\n} from \"../../data/profile-reducer\";\r\nimport {withRouter} from \"react-router-dom\";\r\nimport {compose} from \"redux\";\r\n\r\nclass ProfileContainer extends React.Component {\r\n    refreshProfile() {\r\n        let userId = this.props.match.params.userId;\r\n        if (!userId) {\r\n            userId = this.props.userId;\r\n            if (!userId) {\r\n                this.props.history.push(\"/login\");\r\n            } else {\r\n                this.props.getUserProfile(userId);\r\n                this.props.getStatus(userId);\r\n            }\r\n        } else {\r\n            this.props.getUserProfile(userId);\r\n            this.props.getStatus(userId);\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n\r\n        this.refreshProfile();\r\n    }\r\n\r\n    componentDidUpdate(prevProps, prevState) {\r\n        if (this.props.match.params.userId !== prevProps.match.params.userId) {\r\n            this.refreshProfile();\r\n        }\r\n    }\r\n\r\n    render() {\r\n        // console.log(\"RENDER PROFILE\");\r\n        return (\r\n            <Profile {...this.props} profile={this.props.profile}\r\n                     status={this.props.status} setStatus={this.props.setStatus}\r\n                     isOwner={!this.props.match.params.userId}\r\n                     setPhoto={this.props.setPhoto}\r\n            />\r\n        )\r\n    }\r\n}\r\n\r\nlet mapStateToProps = (state) => ({\r\n        profile: state.profilePage.profile,\r\n        status: state.profilePage.status,\r\n        userId: state.auth.id,\r\n        isAuth: state.auth.isAuth\r\n\r\n    }\r\n)\r\n\r\nexport default compose(connect(mapStateToProps, {\r\n        setUserProfile,\r\n        getUserProfile: getUserProfileThunkCreator,\r\n        setStatus: setStatusThunkCreator,\r\n        getStatus: getStatusThunkCreator,\r\n        setPhoto: setPhotoThunkCreator,\r\n    saveProfile: saveProfileThunkCreator\r\n    }),\r\n    withRouter,\r\n)(ProfileContainer)"],"names":["props","textLike","likesCount","className","styles","src","alt","message","reduxForm","form","onSubmit","handleSubmit","Field","component","TextArea","validate","required","maxLengthCreator","name","placeholder","React","postsElements","posts","map","post","id","values","addPost","addNewPost","connect","state","profilePage","dispatch","addPostActionCreator","MyPosts","Contact","contactTitle","contactValue","profile","isOwner","goToEditMode","onClick","fullName","lookingForAJob","lookingForAJobDescription","aboutMe","Object","keys","contacts","filter","c","key","ProfileStatus","editMode","status","activateEditMode","setState","onStatusChange","e","currentTarget","value","this","setStatus","prevProps","prevState","onChange","autoFocus","onBlur","deactivateEditMode","bind","DescriptionFormReduxForm","error","load","stylesError","createField","Input","type","initialValues","account","data","loadAccount","setPhoto","saveProfile","useState","setEditMode","Preloader","photos","large","userPhoto","file","target","files","formData","then","ProfileContainer","userId","match","params","getUserProfile","getStatus","history","push","refreshProfile","compose","auth","isAuth","setUserProfile","getUserProfileThunkCreator","setStatusThunkCreator","getStatusThunkCreator","setPhotoThunkCreator","saveProfileThunkCreator","withRouter"],"sourceRoot":""}